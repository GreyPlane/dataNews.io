{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","showOverlay","player","nativeElement","poll","console","log","currentTime","rect","getBoundingClientRect","absRect","prop","Math","abs","adPosition","top","bottom","scrollTop","left","scrollLeft","buttonPostion","timerHandler","window","setInterval","clearInterval","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\ninterface HTMLPositon {\n  top: string;\n  left: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'simple-video-player';\n  @ViewChild('videoPlayer', { static: true }) player: ElementRef<\n    HTMLVideoElement\n  >;\n  adPosition?: HTMLPositon;\n  buttonPostion?: HTMLPositon;\n  showOverlay = false;\n  timerHandler?: number;\n\n  ngOnInit() {\n    const player = this.player.nativeElement;\n    const poll = () => {\n      console.log(this.player.nativeElement.currentTime);\n      if (player.currentTime >= 44) {\n        this.showOverlay = true;\n        const rect = player.getBoundingClientRect();\n        const absRect = (prop: 'top' | 'bottom' | 'left' | 'right') =>\n          Math.abs(rect[prop]);\n        this.adPosition = {\n          top: `${rect.bottom + player.scrollTop - 100}px`,\n          left: `${absRect('left') + player.scrollLeft}px`,\n        };\n        this.buttonPostion = {\n          top: `${rect.top + player.scrollTop + 25}px`,\n          left: `${absRect('right') + player.scrollLeft - 100}px`,\n        };\n      }\n    };\n    this.timerHandler = window.setInterval(poll, 10);\n  }\n  onHideAd() {\n    window.clearInterval(this.timerHandler);\n    this.showOverlay = false;\n  }\n  ngOnDestroy() {\n    window.clearInterval(this.timerHandler);\n  }\n}\n","<mat-toolbar>\n  <span>{{ title }}</span>\n</mat-toolbar>\n<div class=\"container\">\n  <video #videoPlayer controls class=\"video-player\">\n    <source src=\"../assets/origin.mp4\" type=\"video/mp4\" />\n  </video>\n  <mat-card *ngIf=\"showOverlay\" class=\"overlay\" [ngStyle]=\"adPosition\">\n    <a href=\"https://github.com\">\n      <mat-icon class=\"ad-icon\">add_shopping_cart</mat-icon>\n      九阳电热水杯带来舒适的出行体验，让你享受满满的自在与幸福感\n    </a>\n    <button *ngIf=\"showOverlay\" (click)=\"onHideAd()\" mat-button>\n      <mat-icon>\n        close\n      </mat-icon>\n    </button>\n  </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}